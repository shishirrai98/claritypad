# MIT License

Copyright (c) 2025 Shishir Rai

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

---
## Notes
- **SOLID Principles**: The codebase adheres to SOLID principles:
  - **SRP**: Each class (e.g., `WysiwygEditor`, `ImagePlugin`) has a single responsibility.
  - **OCP**: Plugins are added via config without modifying core code.
  - **LSP**: Plugins implement the `Plugin` interface for interchangeability.
  - **ISP**: Plugins only implement necessary methods (`init`, optional `destroy`).
  - **DIP**: Dependencies are injected via interfaces (e.g., `Editor`).
- **Security**: All inputs are sanitized using `sanitize-html` to prevent XSS.
- **Toolbar**: Responsive (Flexbox), with configurable menus and show/hide option.
- **Table Insertion**: Visual grid selector mimics Microsoft Wordâ€™s UI.
- **Context Menus**: Right-click options for images and tables, positioned contextually.
- **Developer Experience**: TypeScript, ESLint, Prettier, Jest, and detailed `README.md`.
- **License**: MIT License for open-source usage.
- **Build System**: Rollup for ES Module and CommonJS bundles, with TypeScript declarations.

To set up the project:
1. Create the directory structure and add the files above.
2. Replace placeholders in `package.json` and `README.md` (e.g., `your-username`, `Your Name`).
3. Run `npm install` to install dependencies.
4. Use `npm run build` to bundle, `npm run test` to test, and `npm run lint`/`format` for code quality.
